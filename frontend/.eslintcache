[{"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/index.js":"1","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/App.js":"2","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/routes/index.js":"3","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/header/Header.js":"4","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/footer/Footer.js":"5","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/utilities/hocs/OnPageChange.js":"6","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/routes/loader/index.js":"7","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/airdrop/index.js":"8","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/footer/medias.js":"9","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/header/items.js":"10","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/airdrop/elements.js":"11","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/data/constants.js":"12","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/web3_wrapper.tsx":"13","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/ethereum.ts":"14","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/connectors.ts":"15","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/data/merkle.js":"16","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/salty_contract.ts":"17","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/web3_hooks.ts":"18","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/airdrop_contract.ts":"19","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/connect.tsx":"20"},{"size":217,"mtime":1612146391427,"results":"21","hashOfConfig":"22"},{"size":654,"mtime":1612829104418,"results":"23","hashOfConfig":"22"},{"size":1061,"mtime":1612829104422,"results":"24","hashOfConfig":"22"},{"size":4789,"mtime":1612829104422,"results":"25","hashOfConfig":"22"},{"size":2775,"mtime":1612841441065,"results":"26","hashOfConfig":"22"},{"size":482,"mtime":1612146391431,"results":"27","hashOfConfig":"22"},{"size":2373,"mtime":1612754136287,"results":"28","hashOfConfig":"22"},{"size":10794,"mtime":1613008975736,"results":"29","hashOfConfig":"22"},{"size":342,"mtime":1612997057913,"results":"30","hashOfConfig":"22"},{"size":498,"mtime":1613058754920,"results":"31","hashOfConfig":"22"},{"size":396,"mtime":1612146391427,"results":"32","hashOfConfig":"22"},{"size":7598,"mtime":1612993346882,"results":"33","hashOfConfig":"22"},{"size":453,"mtime":1612829104422,"results":"34","hashOfConfig":"22"},{"size":283,"mtime":1612829104422,"results":"35","hashOfConfig":"22"},{"size":1173,"mtime":1612989006251,"results":"36","hashOfConfig":"22"},{"size":302,"mtime":1612996038934,"results":"37","hashOfConfig":"22"},{"size":382,"mtime":1612838720332,"results":"38","hashOfConfig":"22"},{"size":2395,"mtime":1612829104422,"results":"39","hashOfConfig":"22"},{"size":418,"mtime":1613001811693,"results":"40","hashOfConfig":"22"},{"size":3240,"mtime":1612829104422,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5b603u",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/index.js",[],["94","95"],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/App.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/routes/index.js",["96"],"import React, { Component, Suspense, lazy } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Loader from \"./loader\";\n\n// ROUTES\nimport OnPageChange from \"../utilities/hocs/OnPageChange\";\n\n// HEADER & FOOTER\nimport Header from \"../components/header/Header\";\nimport Footer from \"../components/footer/Footer\";\n\n// LAZY IMPORT\nconst Airdrop = lazy(() => import(\"../components/airdrop\"));\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Suspense fallback={<Loader />}>\n          <OnPageChange>\n            <Header />\n            <Switch>\n              <Route exact path={\"/\"} component={ Airdrop } />\n              <Route\n                path={\"/404\"}\n                render={() =>\n                window.location.replace(\"https://saltandsatoshi.com\")\n                }\n              />\n              <Redirect to={\"/404\"} />\n            </Switch>\n            {/* <Footer /> */}\n          </OnPageChange>\n        </Suspense>\n      </BrowserRouter>\n    );\n  }\n}\n","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/header/Header.js",["97","98","99","100"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/logos/salty-plain.png\";\r\nimport { Menu, X, ChevronDown, ChevronUp } from \"react-feather\";\r\nimport { contract, resources, social } from \"./items\";\r\nimport \"./style.scss\";\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSmall: null,\r\n      isMedium: null,\r\n      isLarge: null,\r\n      isExpanded: null,\r\n      isItemOpen: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.onResize());\r\n  }\r\n\r\n  onResize = () => {\r\n    this.setState({\r\n      isLarge: window.innerWidth >= 992,\r\n      isMedium: window.innerWidth >= 768 && window.innerWidth < 992,\r\n      isSmall: window.innerWidth < 768,\r\n    });\r\n  };\r\n\r\n  onToggleDrawer = () => {\r\n    this.setState((prevState) => ({ isExpanded: !prevState.isExpanded }));\r\n  };\r\n\r\n  onToggleAccordion = (item) => {\r\n    if (this.state.isItemOpen === item) {\r\n      this.setState({ isItemOpen: null });\r\n    } else {\r\n      this.setState({ isItemOpen: item });\r\n    }\r\n  };\r\n\r\n  getAccordion = (item, content) => {\r\n    let title = item[0].toUpperCase() + item.substring(1);\r\n    return (\r\n      <div className=\"accordion-container\">\r\n        <button\r\n          className=\"salty-button\"\r\n          onClick={() => this.onToggleAccordion(item)}\r\n        >\r\n          <h3>\r\n            {title}\r\n            {/* {this.state.isItemOpen === item ? <ChevronUp /> : <ChevronDown />} */}\r\n          </h3>\r\n        </button>\r\n        <div\r\n          className={`accordion-menu ${\r\n            this.state.isItemOpen === item ? \"expanded\" : \"\"\r\n          }`}\r\n        >\r\n          {content.map((c, index) => (\r\n            <a className=\"salty-button\"\r\n              key={index}\r\n              href={c.to}\r\n              onClick={() => {\r\n                this.setState({ isExpanded: null, isItemOpen: null });\r\n                // if (c.title === \"Litepaper\") {\r\n                //   window.open(\r\n                //     \"http://saltandsatoshi.com/\",\r\n                //     \"_blank\"\r\n                //   );\r\n                // }\r\n              }}\r\n            >\r\n              <h3>{c.title}</h3>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  scrollTo = (item) => {\r\n    // Main app\r\n    return (\r\n      <div\r\n        className=\"menu-item\"\r\n        onClick={() => {\r\n          this.setState({ isExpanded: null, isItemOpen: null });\r\n          document\r\n            .getElementById(item.to)\r\n            ?.scrollIntoView({ behavior: \"smooth\" });\r\n        }}\r\n      >\r\n        {item.title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getLink = (item) => {\r\n    // Other apps\r\n    return (\r\n      <a\r\n        href={item.to}\r\n        // className=\"menu-item\"\r\n        onClick={() => {\r\n          this.setState({ isExpanded: null, isItemOpen: null });\r\n        }}\r\n        // style={{whiteSpace: 'nowrap'}}\r\n      >\r\n        <button className=\"salty-button\">\r\n          <h3>{item.title}</h3>\r\n        </button>\r\n      </a>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // Small to medium navigation\r\n    const XSNav = () => {\r\n      return (\r\n        <>\r\n          <div className=\"xs-nav-toggle\" onClick={this.onToggleDrawer}>\r\n            {!this.state.isExpanded ? <Menu /> : <X />}\r\n          </div>\r\n          <div\r\n            className={`xs-nav-menu ${this.state.isExpanded ? \"expanded\" : \"\"}`}\r\n          >\r\n            <div\r\n            style={{display: 'flex', flexDirection: 'column', alignContent: 'space-between'}}\r\n            >\r\n              { this.getLink(contract) }\r\n              {/* { this.getAccordion(\"resources\", resources) } */}\r\n              { this.getAccordion(\"social\", social) }\r\n            </div>\r\n            \r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n    // Large navigation\r\n    const LGNav = () => {\r\n      return (\r\n        <>\r\n          <div className=\"lg-nav-menu\">\r\n            { this.getLink(contract) }\r\n            {/* { this.getAccordion(\"resources\", resources) } */}\r\n            { this.getAccordion(\"social\", social) }\r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <div className=\"header-content\">\r\n          <a href=\"https://saltandsatoshi.com/\" className=\"logo-container\">\r\n            <div className=\"logo-img\">\r\n              <img src={Logo} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"logo-title\"><h3>Salt&Satoshi</h3></div>\r\n          </a>\r\n          {this.state.isSmall || this.state.isMedium ? <XSNav /> : <LGNav />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/footer/Footer.js",["101"],"import React, { Component } from \"react\";\nimport Logo from \"../../assets/logos/salty-plain.png\";\nimport { medias } from \"./medias\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./style.scss\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer-bar\">\n        <div className=\"footer-container\">\n          <div className=\"upper\">\n            <div className=\"navigation\">\n              <div className=\"item\">\n                <div className=\"header\">Applications</div>\n                <a href=\"https://saltandsatoshi.com/\">Home</a>\n              </div>\n              <div className=\"item\">\n                <div className=\"header\">Social</div>\n                <a href=\"https://discord.gg/D4T9PMK9F9\">Discord</a>\n                <a href=\"https://twitter.com/saltandsatoshi\">Twitter</a>\n              </div>\n              <div className=\"item\">\n                <div className=\"header\">Resources</div>\n                <a href=\"https://saltandsatoshi.com/#blog\">Blog</a>\n              </div>\n            </div>\n            <div className=\"media\">\n              <div className=\"header\">Find us</div>\n              <div className=\"items\">\n                {medias.map((m) => (\n                  <a\n                    key={m[1]}\n                    href={m[2]}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <img src={m[0]} alt={m[1]} />\n                  </a>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom\">\n            <a href=\"http://saltandsatoshi.com/\">\n              <img src={Logo} alt=\"\" className=\"logo\" />\n            </a>\n            <div className=\"footer-typer-container\">\n              {/* <ReactTypingEffect\n                text={[\n                  \"Welcome\",\n                ]}\n                cursorRenderer={(cursor) => (\n                  <span className=\"footer-typer-cursor\">{cursor}</span>\n                )}\n                displayTextRenderer={(text, i) => {\n                  return (\n                    <div className=\"footer-typer-text\">\n                      {text.split(\"\").map((char, index) => {\n                        return (\n                          <span key={index}>\n                            {char !== \"_\" ? (\n                              char\n                            ) : (\n                              <span className=\"typer-text-space\" />\n                            )}\n                          </span>\n                        );\n                      })}\n                    </div>\n                  );\n                }}\n              /> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/utilities/hocs/OnPageChange.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/routes/loader/index.js",["102"],"import React from \"react\";\nimport Spinner from \"../../assets/logos/salty-spinner.svg\";\n\nimport \"./style.scss\";\n\nconst loader = () => {\n  return (\n    <div className=\"loader-container\">\n      {/* <img className=\"loader-spinner\" src={Spinner} alt=\"\"  width=\"300\" height=\"300\"/> */}\n      <div \n        className=\"loader-spinner\"\n        style={{\n          height: '300px',\n          width: '300px',\n          display: 'flex'\n        }}\n        dangerouslySetInnerHTML={{\n          __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin:auto;display:block;\" width=\"${300}\" height=\"${300}\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n          <g transform=\"translate(50 50)\">\n            <g transform=\"scale(0.26)\">\n              <g transform=\"translate(-50 -50)\">\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"0.7575757575757576s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#f72585\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.0101010101010102s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#7209b7\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(90 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.5151515151515151s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#3a0ca3\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(180 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"3.0303030303030303s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#4361ee\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(270 50 50)\"></path>\n                </g>\n              </g>\n            </g>\n          </g>\n          </svg>`\n        }}\n      />)\n    </div>\n  );\n};\n\nexport default loader;\n","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/airdrop/index.js",["103","104","105","106"],"import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { toast } from \"react-toastify\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport Connect from '../connect'\nimport { INFURA_JSON_RPC_API } from '../../connectors'\nimport ETHEREUM from '../../services/ethereum'\n\nimport { SALTY_ABI, MERKLE_ABI } from \"../../data/constants\"\n\nimport SALTY_CONTRACT from '../../services/salty_contract'\nimport AIRDROP_CONTRACT from '../../services/airdrop_contract'\n\nimport \"./style.scss\";\n\nimport { merkle } from \"../../data/merkle\";\nrequire('dotenv').config();\n\nfunction AirdropWeb3HooksWrapper() {\n  const context = useWeb3React()\n  const { connector, chainId, account, library, deactivate, active, error } = context\n\n  return <Airdrop chainId={chainId} account={account} library={library} connector={connector}/>\n} \n\nclass Airdrop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false,\n      isDropdownOpen: false,\n      account: null,\n      day: 0,\n      unclaimed: 0,\n      reward: 0,\n      claimable: 0,\n      isAirdropClaimed: false,\n      //unclaimedAirdrops: false,\n      isEligible: false,\n      countdownString: \"0:0:0\",\n    };\n    this.claims = merkle.claims;\n    this.SALTY_ABI = SALTY_ABI;\n    this.MERKLE_ABI = MERKLE_ABI;\n    this.SALTY_ADDRESS = process.env.SALTY_ADDRESS;\n    this.MERKLE_ADDRESS = process.env.MERKLE_ADDRESS\n    this.SALTY_Contract = null;\n    this.airdropContract = null;\n\n  }\n\n  componentDidMount() {\n    this.START();\n\n    this.onAccountChange();\n    this.onNetworkChange();\n    this.setConnection();\n\n  }\n\n  START() {\n    const { account, chainId, library } = this.props\n\n    if (!account) { return }\n\n    this.setState({ \n      account,\n      isConnected: !!account\n    });\n\n    const provider = ETHEREUM.getJsonRpcProvider(INFURA_JSON_RPC_API[chainId], chainId);\n    this.SALTY_Contract = SALTY_CONTRACT.getContract(this.SALTY_ADDRESS, provider)\n\n    const signer = library.getSigner(account)\n    this.airdropContract = AIRDROP_CONTRACT.getContract(signer)\n\n    this.getAirdropStats();\n    // this. = setInterval(() => {\n    //   this.getAirdropStats();\n    // }, 10000);\n  }\n\n  roundTo = (n, digits) => {\n    var negative = false;\n    if (digits === undefined) {\n      digits = 0;\n    }\n    if (n < 0) {\n      negative = true;\n      n = n * -1;\n    }\n    var multiplicator = Math.pow(10, digits);\n    n = parseFloat((n * multiplicator).toFixed(11));\n    n = (Math.round(n) / multiplicator).toFixed(digits);\n    if (negative) {\n      n = (n * -1).toFixed(digits);\n    }\n    return n;\n  };\n\n  getWeb3 = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      this.web3 = new Web3(window.ethereum);\n      try {\n        await window.ethereum.enable().then((accounts) => {\n          this.connectMainnet(accounts);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      this.web3 = new Web3(Web3.currentProvider);\n      try {\n        await this.web3.eth.getAccounts().then((accounts) => {\n          this.connectMainnet(accounts);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      toast.error(\n        \"Non-Ethereum browser detected. Consider using MetaMask\"\n      );\n    }\n  };\n\n  connectMainnet = async (accounts) => {\n    await this.web3.eth.getChainId().then((x) => {\n      if (x === 1) {\n        this.setState({ account: accounts[0].toString(), isConnected: true });\n\n        this.SALTY_Contract = new this.web3.eth.Contract(this.SALTY_ABI, this.SALTY_ADDRESS);\n        this.airdropContract = new this.web3.eth.Contract(this.MERKLE_ABI, this.MERKLE_ADDRESS);\n\n        // this.getAirdropStats();\n        // var self = this;\n        // this.statsInterval = setInterval(function () {\n        //   self.getAirdropStats();\n        // }, 10000);\n      } else if (x === 4) {\n        this.setState({ account: accounts[0].toString(), isConnected: true });\n\n        this.SALTY_Contract = new this.web3.eth.Contract(this.SALTY_ABI, this.SALTY_ADDRESS);\n        this.airdropContract = new this.web3.eth.Contract(\n          this.MERKLE_ABI,\n          this.MERKLE_ADDRESS\n        );\n\n        // this.getAirdropStats();\n        // var self = this;\n        // this.statsInterval = setInterval(function () {\n        //   self.getAirdropStats();\n        // }, 10000);\n      }\n      else {\n        this.setState({ account: null });\n        toast.error(\"Connect to Rinkeby or Mainnet\");\n      }\n    });\n  };\n\n  getAirdropStats = () => {\n    \n    if (\n      this.claims[\n        this.web3.utils.toChecksumAddress(this.state.account)\n      ] != null\n    ) {\n      this.setState({ isEligible: true });\n    }\n\n    if (this.airdropContract != null && this.SALTY_Contract != null) {\n      this.SALTY_Contract.methods\n        .balanceOf(this.SALTY_ADDRESS)\n        .call()\n        .then((result) => {\n          this.setState({\n            // TODO: check below\n            unclaimed: parseFloat(this.web3.utils.fromWei(result, \"ether\")),\n          });\n        });\n\n      if (this.state.isEligible) {\n        this.airdropContract.methods\n          .isClaimed(\n            this.claims[\n              this.web3.utils.toChecksumAddress(this.state.account)\n            ].index\n          )\n          .call()\n          .then((isClaimed) => {\n            this.setState({\n              isAirdropClaimed: isClaimed,\n              claimable: this.roundTo(\n                this.web3.utils.fromWei(\n                  this.claims[\n                    this.web3.utils.toChecksumAddress(this.state.account)\n                  ].amount,\n                  \"ether\"\n                ),\n                2\n              ),\n            });\n          });\n       }\n     }\n  };\n\n  claimAirdrop = () => {\n    if (this.web3 != null && this.airdropContract != null) {\n      this.airdropContract.methods\n        .claim(\n          this.claims[\n            this.web3.utils.toChecksumAddress(this.state.account)\n          ].index,\n          this.state.account,\n          this.claims[\n            this.web3.utils.toChecksumAddress(this.state.account)\n          ].amount,\n          this.claims[\n            this.web3.utils.toChecksumAddress(this.state.account)\n          ].proof\n        )\n        .send({\n          from: this.state.account,\n        })\n        .on(\"error\", function (error) {\n          toast.error(\"Transaction Failed\");\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          toast.info(\n            \"Click here to review your claim.\",\n            {\n              onClick: function () {\n                window.open(\n                  \"https://etherscan.io/tx/\" + transactionHash,\n                  \"_blank\"\n                );\n              },\n            }\n          );\n        })\n        .on(\"confirmation\", function (confirmationNumber, receipt) {\n          toast.success(\"Airdrop Claim Successful\");\n        });\n    }\n  };\n\n  onAccountChange() {\n    window?.ethereum?.on(\"accountsChanged\", (accounts) => {\n      if (\n        accounts.length > 0 &&\n        this.state.account !== accounts[0].toString()\n      ) {\n        this.setState({ account: accounts[0].toString() });\n      } else {\n        this.setState({ account: null });\n      }\n    });\n  }\n\n  onNetworkChange() {\n    window?.ethereum?.on(\"chainChanged\", (chainId) => window.location.reload());\n  }\n\n  setConnection = () => {\n    if (\n      this.state.isConnected &&\n      this.web3.utils.isAddress(this.state.account)\n    ) {\n      this.setState((prevState) => ({\n        isDropdownOpen: !prevState.isDropdownOpen,\n      }));\n    } else {\n      this.getWeb3();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"max-width-container\">\n        <div className=\"airdrop-container\">\n          <div className=\"airdrop-title\">\n            <div className=\"title-text\">\n              <br/><br/><br/>\n              <h1>$SALTY Airdrop</h1>\n            </div>\n            {/* <ConnectButton\n              account={this.state.account}\n              setConnection={this.setConnection}\n            /> */}\n            <Connect/>\n          </div>\n          {/* <div className=\"airdrop-subtitle\">\n            <span>Airdrop Day: </span>\n            {this.state.day}\n          </div>\n          <div className=\"airdrop-subtitle\">\n            <span>Unclaimed $SALTY: </span>\n            {this.state.unclaimed.toLocaleString()}\n          </div>\n          <div className=\"airdrop-subtitle\">\n            <span>Unclaimed Drops: </span>\n            {this.state.unclaimedAirdrops}\n          </div> \n          <div className=\"airdrop-subtitle\">\n            <a\n              href=\"https://rinkeby.etherscan.io/address/0xd1666190bE4fC9842b12397047B9B8Ad3A5D48c4#code\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              style={{\n                fontSize: \"0.8em\",\n                color: \"#ffffff\",\n                display: \"inline-block\",\n                textAlign: \"center\",\n              }}\n            >\n              Airdrop Contract\n            </a>\n          </div> */}\n\n          <div className=\"airdrop-details\">\n            <div className=\"lower\">\n              { this.state.isConnected ? (\n                this.state.isEligible ? (\n                  this.state.isAirdropClaimed ? (\n                    <>\n                      <div className=\"claim-item\">\n                        <div className=\"title\">\n                          You have already claimed your airdrop\n                        </div>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div className=\"claim-item\">\n                        <div className=\"title\">Claimable $SALTY</div>\n                        <div className=\"value\">\n                          {this.state.claimable.toLocaleString()}\n                        </div>\n                      </div>\n                      <button\n                        className=\"claim-btn\"\n                        onClick={this.claimAirdrop}\n                      >\n                        Claim Airdrop\n                      </button>\n                    </>\n                  )\n                ) : (\n                  <>\n                    <div className=\"claim-item\">\n                      <div className=\"title\">\n                        Address Ineligible.\n                      </div>\n                    </div>\n                  </>\n                )\n              ) : (\n                <div className=\"claim-disconnected\">\n                  <span>Wallet not connected</span>\n                  <br />\n                  Please, connect wallet to continue...\n                </div>\n              )\n            }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Airdrop;\n","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/footer/medias.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/header/items.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/airdrop/elements.js",[],["107","108"],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/data/constants.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/web3_wrapper.tsx",[],["109","110"],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/ethereum.ts",["111","112"],"import { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nfunction getJsonRpcProvider(jsonRPCAPIURL: string, network: number): JsonRpcProvider {\n  const provider = new JsonRpcProvider(jsonRPCAPIURL, network)\n  return provider\n}\n\nexport default { getJsonRpcProvider }","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/connectors.ts",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/data/merkle.js",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/salty_contract.ts",["113"],"import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nimport { SALTY_ABI } from \"../data/constants\";\n\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, SALTY_ABI, providerOrSigner)\n}\n\nexport default { getContract }","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/web3_hooks.ts",[],"/home/carl/Documents/saltandsats/merkle-drop/frontend/src/services/airdrop_contract.ts",["114"],"import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\n// import { merkle } from \"../data/merkle\"\n\nimport { MERKLE_ADDRESS, MERKLE_ABI } from \"../data/constants\";\n\nexport function getContract(providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(MERKLE_ADDRESS, MERKLE_ABI, providerOrSigner)\n}\n\nexport default { getContract }","/home/carl/Documents/saltandsats/merkle-drop/frontend/src/components/connect.tsx",["115","116","117"],"import React from 'react'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport * as WEB3HOOKS from '../services/web3_hooks'\n\nimport * as Connectors from '../connectors'\n\nconst ConnectorButton: React.FC<{theConnector: any, title: string}> = ({children, theConnector, title}) => {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate } = context\n  const isConnected = connector === theConnector\n\n  return (\n    <button className=\"salty-button\"\n      onClick={event => {\n        event.stopPropagation()\n        activate(theConnector)\n        return false\n      }}\n    >\n      <h3>{title}</h3>\n    </button>)\n}\n\nfunction Connect() {\n  const context = useWeb3React<Web3Provider>()\n  const { chainId, account, deactivate, connector, active, error } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = WEB3HOOKS.useEagerConnect()\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  WEB3HOOKS.useInactiveListener(!triedEager || !!activatingConnector)\n\n  if (!account) {\n    return (\n      <>\n        <div id=\"buttons02\" className=\"style1 buttons\" style={{display: \"flex\", justifyContent: 'space-around'}}>\n          <ConnectorButton theConnector={Connectors.injected} title=\"Metamask\"/>\n          <ConnectorButton theConnector={Connectors.ledger} title=\"Ledger\"/>\n          <ConnectorButton theConnector={Connectors.trezor} title=\"Trezor\"/>\n          <ConnectorButton theConnector={Connectors.walletconnect} title=\"Walletconnect\"/>\n        </div>\n        { error && <div style={{ fontWeight: 'normal', color: '#fc508e' }} className=\"style2 with-cool-font\">{error.message}</div> }\n      </>)\n  } else {\n    return (<>\n      <div id=\"buttons02\" className=\"style1 buttons\" style={{display: \"flex\", justifyContent: 'space-around'}}>\n        <button className=\"salty-button\"\n            style={{overflowX: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <h3>{account}</h3>\n        </button>\n        { (chainId !== 1) && (\n          <button className=\"salty-button\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <h3>Network: {chainId}</h3>\n        </button>\n        )}\n        <button className=\"salty-button\"\n            onClick={event => {\n              event.stopPropagation()\n              deactivate()\n              return false\n            }}\n          >\n            <h3>Logout</h3>\n        </button>\n      </div>\n      { error && <p style={{color: '#f72585'}}>⚠️ {error.message}</p> }\n    </>)\n  }\n}\n\nexport default Connect",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":4,"column":19,"nodeType":"124","messageId":"125","endLine":4,"endColumn":30},{"ruleId":"122","severity":1,"message":"128","line":4,"column":32,"nodeType":"124","messageId":"125","endLine":4,"endColumn":41},{"ruleId":"122","severity":1,"message":"129","line":5,"column":20,"nodeType":"124","messageId":"125","endLine":5,"endColumn":29},{"ruleId":"122","severity":1,"message":"130","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":25},{"ruleId":"122","severity":1,"message":"131","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":15},{"ruleId":"122","severity":1,"message":"132","line":20,"column":10,"nodeType":"124","messageId":"125","endLine":20,"endColumn":33},{"ruleId":"122","severity":1,"message":"133","line":22,"column":49,"nodeType":"124","messageId":"125","endLine":22,"endColumn":59},{"ruleId":"122","severity":1,"message":"134","line":22,"column":61,"nodeType":"124","messageId":"125","endLine":22,"endColumn":67},{"ruleId":"122","severity":1,"message":"135","line":22,"column":69,"nodeType":"124","messageId":"125","endLine":22,"endColumn":74},{"ruleId":"118","replacedBy":"136"},{"ruleId":"120","replacedBy":"137"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":8,"column":1,"nodeType":"142","endLine":8,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":10,"column":1,"nodeType":"142","endLine":10,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":12,"column":1,"nodeType":"142","endLine":12,"endColumn":31},{"ruleId":"138","severity":1,"message":"143","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":27},{"ruleId":"138","severity":1,"message":"144","line":12,"column":9,"nodeType":"124","messageId":"125","endLine":12,"endColumn":20},{"ruleId":"138","severity":1,"message":"134","line":28,"column":52,"nodeType":"124","messageId":"125","endLine":28,"endColumn":58},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ChevronDown' is defined but never used.","'ChevronUp' is defined but never used.","'resources' is defined but never used.","'ReactTypingEffect' is defined but never used.","'Spinner' is defined but never used.","'AirdropWeb3HooksWrapper' is defined but never used.","'deactivate' is assigned a value but never used.","'active' is assigned a value but never used.","'error' is assigned a value but never used.",["145"],["146"],"@typescript-eslint/no-unused-vars","'JsonRpcSigner' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Web3ReactProvider' is defined but never used.","'isConnected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]